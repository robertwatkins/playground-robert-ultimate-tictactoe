name: Moves service
description:  |
    A service to manage the collection of game moves
style: COLLECTION
uriTemplate: /games/{id}/moves
methods:
    GET:
        summary: List all the Moves
        notes: List all the Moves
        # implementation: api.getMoves
        request:
            parameters: []
            cookies: []
            headers:
                -
                    field: Accept
                    content: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
                -
                    field: Accept-Encoding
                    content: "gzip, deflate"
        responses:
            -
                name: OK
                statusCode: &OkStatusCode 200
                reason: &OkReason Successful execution
                # validationSchema: getCollection-responseBody-validationSchema.json
                cookies: []
                headers:
                    -
                        field: Content-Type
                        content: application/json
                mockBody: getCollection-responseBody.json
        testCases:
            -
                name: Get Moves
                description: Successfully retrieves all the Moves
                url: /games/{id}/moves
                template: testGetMethod.mustache
                request:
                    cookies: []
                    headers:
                        -
                            field : "Accept"
                            content: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
                        -
                            field: "Accept-Encoding"
                            content: "gzip, deflate"
                response:
                    name: OK
                    statusCode: *OkStatusCode
                    reason: *OkReason
                    cookies: []
                    headers:
                        -
                            field: "Content-Type"
                            content: "application/json"
                    # validationSchema: getCollection-responseBody-validationSchema.json

    POST:
        summary: Create a new instance of Moves
        notes: Create a new instance Moves
        # implementation: api.postMoves
        uriTemplate: /games/{id}/moves
        request:
            parameters: []
            cookies: []
            headers:
                -
                    field: Accept
                    content: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
                -
                    field: Accept-Encoding
                    content: "gzip, deflate"
            mockBody: postCollection-requestBody.json
        responses:
            -
                name: OK
                statusCode: *OkStatusCode
                reason: *OkReason
                # validationSchema: postCollection-responseBody-validationSchema.json
                cookies: []
                headers:
                    -
                        field: Content-Type
                        content: application/json
                mockBody: postCollection-responseBody.json
        testCases:
            -
                name: Create one instance of Moves
                description: Succesfully creates a new instance of Moves
                url: /games/{id}/moves
                template: testPostMethod.mustache
                request:
                    cookies: []
                    headers:
                        -
                            field : "Accept"
                            content: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
                        -
                            field: "Accept-Encoding"
                            content: "gzip, deflate"
                    body: postCollection-requestBody.json
                response:
                    name: OK
                    statusCode: *OkStatusCode
                    reason: *OkReason
                    cookies: []
                    headers:
                        -
                            field: "Content-Type"
                            content: "application/json"
                    body: postCollection-responseBody.json
                    # validationSchema: postCollection-responseBody-validationSchema.json
